# flp-gatherer configuration file
# This file defines the mapping between applications, their log paths,
# and which node groups they belong to

# Define applications and their log file paths
applications:
  # Elasticsearch database
  elasticsearch:
    log_paths:
      - /var/log/elasticsearch/elastic-*.log.*
    journal: false # Use file-based logs only
    journal_mode: binary # Optional: not used when journal: false

  consul:
    log_paths:
      - /var/log/consul

  # System logs
  system:
    # log_paths:
    #   - /var/log/syslog*
    journal: true # Enable systemd journal collection
    journal_mode: binary # 'binary' (copy journal files) or 'export' (journalctl export)

# Define which applications run on which node groups
# Group names should match those in your Ansible inventory
#
# Special group '_all_nodes': Applications here are collected from ALL nodes
# regardless of their inventory group membership
node_groups:
  # Special: Applied to ALL nodes automatically
  _all_nodes:
    - system

  elasticsearch:
    - elasticsearch

# Rsync and collection options
rsync_options:
  # Maximum number of parallel rsync jobs
  max_parallel_jobs: 5

  # Enable post-sync compression of collected logs (creates tar.gz archives)
  # Set to false to keep logs uncompressed (default, saves CPU and allows immediate access)
  # Set to true to automatically compress logs after each sync (saves disk space)
  # Note: You can always compress later using the 'compress' command
  compress: false

  # Local directory where logs will be stored
  # Can be absolute path (e.g., /var/logs/collected) or relative to this directory
  # Directory will be created automatically if it doesn't exist
  local_storage: /data/logs/p2-staging

  # SSH user for remote connections
  ssh_user: root

  # SSH port
  ssh_port: 22

  # SSH options for ignoring host key verification
  # Set to true to skip fingerprint checking (useful for automated scripts)
  # WARNING: This reduces security - only use in trusted networks
  ssh_ignore_host_key: true

  # Enable rsync compression during transfer (-z flag)
  # Set to false to reduce CPU load on remote hosts (recommended for fast networks)
  # Set to true for slow/high-latency connections where bandwidth is limited
  use_compression: true

  # Additional rsync flags
  # -a: archive mode (preserves permissions, timestamps, etc.)
  # --progress: show progress during transfer
  additional_flags:
    - -a
    - --progress

  # Number of retry attempts for failed syncs
  retry_count: 3

  # Delay in seconds between retry attempts
  retry_delay: 5

  # Timeout in seconds for each rsync operation
  timeout: 300

  # Date filter: only sync files modified within last N days
  # Set to null or omit to sync all files
  date_filter: null

# Journal collection options (for systemd journal logs)
journal_options:
  # Default collection mode for journal logs:
  #   'binary': Copy journal files directly (RECOMMENDED - minimal remote impact, complete data)
  #   'export': Use journalctl to export logs (processes on remote, more flexible filtering)
  default_mode: binary

  # Binary mode settings (when journal_mode: binary)
  binary:
    # Remote journal directory (or directories)
    # Can be a single path (string) or multiple paths (list)
    # Common locations:
    #   - /var/log/journal/  (persistent storage)
    #   - /run/log/journal/  (volatile/runtime storage)
    remote_journal_path:
      - /var/log/journal/
      - /run/log/journal/

    # Or single path:
    # remote_journal_path: /var/log/journal/

    # Copy only current boot's journal (reduces transfer size significantly)
    current_boot_only: true

  # Export mode settings (when journal_mode: export)
  export:
    # Output format: 'export', 'json', 'json-pretty'
    # 'export': Structured format with all fields (best for complete data)
    # 'json': JSON format (best for Logstash)
    output_format: export

    # Enable SSH compression for journal transfer
    ssh_compression: true

    # Priority filter: only collect logs at this level or higher
    # Set to null to collect all priorities
    priority_filter: null

    # Maximum lines to collect per journal query (safety limit)
    max_lines: null
